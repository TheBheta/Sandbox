package ctfs;

import util.Fraction;
import util.Numbers;

import java.math.BigInteger;
import java.util.ArrayList;

public class NoPaddingNoProblem {
    private static BigInteger n = new BigInteger("132678705077826194019975832799679287784379767724233880320135836948735126576804878023636799440030384561673826228250474199484317648295029602610618267853110024657831091328520952513227123869125505994793416083979972423840208637751135914779465693855651211639699386987641619118217853290859010019393320112467131498471");
    private static BigInteger c = new BigInteger("115852754338609902097083115542040721649892682586453271885246333163862110370944366290238355430628787399352222525024363204225082604692898368944262579664277593108388903541539854091737273428704139854166509135267134889995605371942254200813140718477423349106075753596295466382690777488529127805073034957325348170181");
    private static BigInteger e = new BigInteger("65537");
    public static void main(String[] args) {
        //System.out.println(BigInteger.TWO.modPow(e, n));
        //System.out.println(BigInteger.TWO.modPow(e, n).multiply(c));
        BigInteger m2 = new BigInteger("580550060391700078946913236734911770139931497702556153513487440893406629034802718534645538074938502890769716268793877259514");
        BigInteger m = m2.divide(BigInteger.TWO);
        System.out.println(Numbers.hexToAscii(m.toString(16)));
    }



}